{
    "swagger": "2.0",
    "info": {
        "description": "A list of the currently provided Interfaces to interact with FairOS decentralised file system(dfs), implementing user, pod, file system, key value store and document store",
        "title": "FairOS-dfs server",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v0.0.0"
    },
    "paths": {
        "/public-dir": {
            "get": {
                "description": "PublicPodGetDirHandler is the api handler to list content of a directory from a public pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "List directory content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod sharing reference",
                        "name": "sharingRef",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dir location in the pod",
                        "name": "dirPath",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/public-file": {
            "get": {
                "description": "PodReceiveInfoHandler is the api handler to download file from a shared pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "download file from a shared pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod sharing reference",
                        "name": "sharingRef",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file location in the pod",
                        "name": "filePath",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/public-kv": {
            "get": {
                "description": "PublicPodKVEntryGetHandler is the api handler to get key from key value store from a public pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "get key from public pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod sharing reference",
                        "name": "sharingRef",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "key to look up",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.KVResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/public/{ref}/{file}": {
            "get": {
                "description": "PublicPodFilePathHandler is the api handler to download file from a shared pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "download file from a shared pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod sharing reference",
                        "name": "ref",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file location in the pod",
                        "name": "file",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/chmod": {
            "post": {
                "description": "DirectoryModeHandler is the api handler to change mode of a directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "change mode of a directory",
                "operationId": "directory-mode-handler",
                "parameters": [
                    {
                        "description": "dir mode request",
                        "name": "dir_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DirModeRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/ls": {
            "get": {
                "description": "DirectoryLsHandler is the api handler for listing the contents of a directory.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "List directory",
                "operationId": "directory-ls-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dir path",
                        "name": "dirPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/mkdir": {
            "post": {
                "description": "DirectoryMkdirHandler is the api handler to create a new directory.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "Create directory",
                "operationId": "directory-mkdir-handler",
                "parameters": [
                    {
                        "description": "pod name and dir path",
                        "name": "dir_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DirRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/present": {
            "get": {
                "description": "DirectoryPresentHandler is the api handler which says if a directory is present or not",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "Is directory present",
                "operationId": "directory-present-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dir path",
                        "name": "dirPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DirPresentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/rename": {
            "post": {
                "description": "DirectoryRenameHandler is the api handler to rename a directory.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "Rename directory",
                "operationId": "directory-rename-handler",
                "parameters": [
                    {
                        "description": "old name and new path",
                        "name": "dir_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.RenameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/rmdir": {
            "delete": {
                "description": "DirectoryRmdirHandler is the api handler to remove a directory.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "Remove directory",
                "operationId": "directory-rmdir-handler",
                "parameters": [
                    {
                        "description": "pod name and dir path",
                        "name": "dir_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DirRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/stat": {
            "get": {
                "description": "DirectoryStatHandler is the api handler which gives the information about a directory",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "Directory stat",
                "operationId": "directory-stat-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dir path",
                        "name": "dirPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dir.Stats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/count": {
            "post": {
                "description": "DocCountHandler is the api handler to count the number of documents in a given document database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "Count number of document in a table",
                "operationId": "doc-count",
                "parameters": [
                    {
                        "description": "doc table info",
                        "name": "doc_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DocCountRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/collection.TableKeyCount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/delete": {
            "delete": {
                "description": "DocDeleteHandler is the api handler to delete the given document database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "Delete a doc table",
                "operationId": "doc-delete",
                "parameters": [
                    {
                        "description": "doc table info",
                        "name": "doc_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SimpleDocRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/entry/del": {
            "delete": {
                "description": "DocEntryDelHandler is the api handler to delete a document from a document datastore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "Delete a document from a document datastore",
                "operationId": "doc-entry-del",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "podName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tableName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/entry/get": {
            "get": {
                "description": "DocEntryGetHandler is the api handler to get a document from a document datastore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "Get a document from a document datastore",
                "operationId": "doc-entry-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id to search for",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "base64 encoded string",
                        "schema": {
                            "$ref": "#/definitions/api.DocGet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/entry/put": {
            "post": {
                "description": "DocEntryPutHandler is the api handler add a document in to a document datastore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "Add a record in document datastore",
                "operationId": "doc-entry-put",
                "parameters": [
                    {
                        "type": "string",
                        "name": "doc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "podName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tableName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/find": {
            "get": {
                "description": "DocFindHandler is the api handler to select rows from a given document datastore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "Get rows from a given doc datastore",
                "operationId": "doc-find",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "expression to search for. allowed operators in expr are =, \u003e, =\u003e, \u003c=, \u003c. eg: 'first_name=\u003eJohn', 'first_name=\u003eJ.', 'first_name=\u003e.', 'age=\u003e30', 'age\u003c=30'. if index is string, expr supports regex. we do not have support for multiple conditions in expr yet",
                        "name": "expr",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "number od documents",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "array of base64 encoded string",
                        "schema": {
                            "$ref": "#/definitions/api.DocFind"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/indexjson": {
            "post": {
                "description": "DocIndexJsonHandler is the api handler to index a json file that is present in a pod, in to the given document database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "Index a json file that is present in a pod, in to the given document database",
                "operationId": "doc-indexjson",
                "parameters": [
                    {
                        "description": "index request",
                        "name": "index_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DocIndexRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/loadjson": {
            "post": {
                "description": "DocLoadJsonHandler is the api handler that indexes a json file that is present in the local file system",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "Load json file from local file system",
                "operationId": "doc-loadjson",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "json to index",
                        "name": "json",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/ls": {
            "get": {
                "description": "DocListHandler is the api handler which lists all the document database in a pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "List all doc table",
                "operationId": "doc-ls",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DocumentDBs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/new": {
            "post": {
                "description": "DocCreateHandler is the api handler to create a new document database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "Create in doc table",
                "operationId": "doc-create",
                "parameters": [
                    {
                        "description": "doc table info. si or simple index is a comma separated list of keys and their types. eg: 'first_name=string,age=number'. valid index types can be 'string', 'number', 'map', 'list'. default index is 'id' and it should be of type string",
                        "name": "doc_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DocRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/doc/open": {
            "post": {
                "description": "DocOpenHandler is the api handler to open a document database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doc"
                ],
                "summary": "Open a doc table",
                "operationId": "doc-open",
                "parameters": [
                    {
                        "description": "doc table info",
                        "name": "doc_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DocRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DocumentDBs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/chmod": {
            "post": {
                "description": "FileModeHandler is the api handler to change mode of a file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "chmod a file",
                "operationId": "file-mode-handler",
                "parameters": [
                    {
                        "description": "file mode request",
                        "name": "file_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FileModeRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/delete": {
            "delete": {
                "description": "FileReceiveHandler is the api handler to delete a file from a given pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Delete a file",
                "operationId": "file-delete-handler",
                "parameters": [
                    {
                        "description": "pod name and file path",
                        "name": "file_delete_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FileDeleteRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/download": {
            "get": {
                "description": "FileDownloadHandlerGet is the api handler to download a file from a given pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Download a file",
                "operationId": "file-download-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file path",
                        "name": "filePath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            },
            "post": {
                "description": "FileDownloadHandlerPost is the api handler to download a file from a given pod",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "*/*"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Download a file",
                "operationId": "file-download-handler-post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file path",
                        "name": "filePath",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/receive": {
            "get": {
                "description": "FileReceiveHandler is the api handler to receive a file in a given pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Receive a file",
                "operationId": "file-receive-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sharing reference",
                        "name": "sharingRef",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file location",
                        "name": "dirPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.FileSharingReference"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/receiveinfo": {
            "get": {
                "description": "FileReceiveInfoHandler is the api handler to receive a file info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Receive a file info",
                "operationId": "file-receive-info-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sharing reference",
                        "name": "sharingRef",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ReceiveFileInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/rename": {
            "post": {
                "description": "FileRenameHandler is the api handler to get the information of a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Info of a file",
                "operationId": "file-rename-handler",
                "parameters": [
                    {
                        "description": "old name \u0026 new name",
                        "name": "rename_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.RenameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/share": {
            "post": {
                "description": "FileShareHandler is the api handler to share a file from a given pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Share a file",
                "operationId": "file-share-handler",
                "parameters": [
                    {
                        "description": "file share request params",
                        "name": "file_share_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FileShareRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.FileSharingReference"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/stat": {
            "get": {
                "description": "FileStatHandler is the api handler to get the information of a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Info of a file",
                "operationId": "file-stat-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file path",
                        "name": "filePath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/file.Stats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/status": {
            "get": {
                "description": "FileStatusHandler is the api handler to check sync status of a file from a given pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Sync status of a file",
                "operationId": "file-status-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file path",
                        "name": "filePath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.StatusResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/update": {
            "post": {
                "description": "FileUpdateHandler is the api handler to update a file from a given offset",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Update a file",
                "operationId": "file-update-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location",
                        "name": "filePath",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file content to update",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file offset",
                        "name": "offset",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/upload": {
            "post": {
                "description": "FileUploadHandler is the api handler to upload a file from a local file system to the dfs",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Upload a file",
                "operationId": "file-upload-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location",
                        "name": "dirPath",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "4Kb, 1Mb",
                        "description": "block size to break the file",
                        "name": "blockSize",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "snappy, gzip",
                        "description": "cookie parameter",
                        "name": "fairOS-dfs-Compression",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "true, false",
                        "description": "overwrite the file if already exists",
                        "name": "overwrite",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/count": {
            "post": {
                "description": "KVCountHandler is the api handler to count the number of rows in a key value table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Count rows in a key value table",
                "operationId": "kv-count",
                "parameters": [
                    {
                        "description": "kv table request",
                        "name": "kv_table_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.KVTableRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/collection.TableKeyCount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/delete": {
            "delete": {
                "description": "KVDeleteHandler is the api handler to delete a key value table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Delete a key value table",
                "operationId": "kv-delete",
                "parameters": [
                    {
                        "description": "kv table request",
                        "name": "kv_table_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.KVTableRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/entry/del": {
            "delete": {
                "description": "KVDelHandler is the api handler to delete a key and value from the kv table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Delete key-value from the kv table",
                "operationId": "kv-del",
                "parameters": [
                    {
                        "description": "delete request",
                        "name": "delete_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.KVEntryDeleteRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.KVResponseRaw"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/entry/get": {
            "get": {
                "description": "KVGetHandler is the api handler to get a value from the kv table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "get value from the kv table",
                "operationId": "kv-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.KVResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/entry/get-data": {
            "get": {
                "description": "KVGetDataHandler is the api handler to get raw value from the kv table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "get value from the kv table",
                "operationId": "kv-get-data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "byte-string, string",
                        "description": "format of the value",
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.KVResponseRaw"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/entry/present": {
            "get": {
                "description": "KVPresentHandler is the api handler to check if a value exists in the kv table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Check if a value exists in the kv table",
                "operationId": "kv-present-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/entry/put": {
            "post": {
                "description": "KVPutHandler is the api handler to put a key-value  in the kv table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "put key and value in the kv table",
                "operationId": "kv-put",
                "parameters": [
                    {
                        "description": "kv entry",
                        "name": "kv_entry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.KVEntryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/export": {
            "post": {
                "description": "KVExportHandler is the api handler to export from a particular key with the given prefix",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Export from a particular key with the given prefix",
                "operationId": "kv-export",
                "parameters": [
                    {
                        "description": "kv export info",
                        "name": "export_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.KVExportRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/loadcsv": {
            "post": {
                "description": "KVLoadCSVHandler is the api handler to load a csv file as key and value in a KV table",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Upload a csv file in kv table",
                "operationId": "kv-loadcsv",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "keep in memory",
                        "name": "memory",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file to upload",
                        "name": "csv",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/ls": {
            "get": {
                "description": "KVListHandler is the api handler to list all the key value tables in a pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "List all key value tables",
                "operationId": "kv-ls",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Collections"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/new": {
            "post": {
                "description": "KVCreateHandler is the api handler to create a key value table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Create a key value table",
                "operationId": "kv-create-handler",
                "parameters": [
                    {
                        "description": "kv table request",
                        "name": "kv_table_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.KVTableRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/open": {
            "post": {
                "description": "KVOpenHandler is the api handler to open a key value table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Open a key value table",
                "operationId": "kv-open",
                "parameters": [
                    {
                        "description": "kv table request",
                        "name": "kv_table_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.KVTableRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/seek": {
            "post": {
                "description": "KVSeekHandler is the api handler to seek to a particular key with the given prefix",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Seek in kv table",
                "operationId": "kv-seek",
                "parameters": [
                    {
                        "description": "kv seek info",
                        "name": "export_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.KVExportRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/kv/seek/next": {
            "post": {
                "description": "KVGetNextHandler is the api handler to get the key and value from the current seek position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kv"
                ],
                "summary": "Get next value from last seek in kv table",
                "operationId": "kv-get-next",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.KVResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/close": {
            "post": {
                "description": "PodCloseHandler is the api handler to close an open pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Close pod",
                "operationId": "pod-close-handler",
                "parameters": [
                    {
                        "description": "pod name",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodNameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/delete": {
            "delete": {
                "description": "PodDeleteHandler is the api handler to delete a pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Delete pod",
                "operationId": "pod-delete-handler",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodNameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/fork": {
            "post": {
                "description": "PodForkHandler is the api handler to fork a pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Fork a pod",
                "operationId": "pod-fork-handler",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodForkRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/fork-from-reference": {
            "post": {
                "description": "PodForkFromReferenceHandler is the api handler to fork a pod from a given sharing reference",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Fork a pod from sharing reference",
                "operationId": "pod-fork-from-reference-handler",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodForkFromReferenceRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/ls": {
            "get": {
                "description": "PodListHandler is the api handler to list all pods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "List pods",
                "operationId": "pod-list-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PodListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/new": {
            "post": {
                "description": "PodCreateHandler is the api handler to create a new pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Create pod",
                "operationId": "pod-create-handler",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodNameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/open": {
            "post": {
                "description": "PodOpenHandler is the api handler to open pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Open pod",
                "operationId": "pod-open-handler",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodNameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/open-async": {
            "post": {
                "description": "PodOpenAsyncHandler is the api handler to open pod asynchronously",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Open pod",
                "operationId": "pod-open-async-handler",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodNameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/present": {
            "get": {
                "description": "PodPresentHandler is the api handler to check if a pod is present",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Is pod present",
                "operationId": "pod-present",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/receive": {
            "get": {
                "description": "PodReceiveHandler is the api handler to receive shared pod from shared reference",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Receive shared pod",
                "operationId": "pod-receive-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod sharing reference",
                        "name": "sharingRef",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pod name to be saved as",
                        "name": "sharedPodName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/receiveinfo": {
            "get": {
                "description": "PodReceiveInfoHandler is the api handler to receive shared pod info from shared reference",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Receive shared pod info",
                "operationId": "pod-receive-info-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod sharing reference",
                        "name": "sharingRef",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pod.ShareInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/share": {
            "post": {
                "description": "PodShareHandler is the api handler to share a pod to the public",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Share pod",
                "operationId": "pod-share-handler",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.PodShareRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PodSharingReference"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/stat": {
            "get": {
                "description": "PodStatHandler is the api handler get information about a pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Stats for pod",
                "operationId": "pod-stat-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "podName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PodStatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/sync": {
            "post": {
                "description": "PodSyncHandler is the api handler to sync a pod's content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Sync pod",
                "operationId": "pod-sync-handler",
                "parameters": [
                    {
                        "description": "pod name",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodNameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/sync-async": {
            "post": {
                "description": "PodSyncAsyncHandler is the api handler to sync a pod's content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Sync pod asynchronously",
                "operationId": "pod-sync-async-handler",
                "parameters": [
                    {
                        "description": "pod name",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodNameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/user/delete": {
            "post": {
                "tags": [
                    "user"
                ],
                "deprecated": true,
                "responses": {}
            }
        },
        "/v1/user/export": {
            "post": {
                "tags": [
                    "user"
                ],
                "deprecated": true,
                "responses": {}
            }
        },
        "/v1/user/isloggedin": {
            "get": {
                "description": "Check if the given user is logged-in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Is user logged-in",
                "operationId": "user-isloggedin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "userName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.LoginStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "deprecated": true,
                "responses": {}
            }
        },
        "/v1/user/logout": {
            "post": {
                "description": "logs-out user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Logout",
                "operationId": "user-logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/user/present": {
            "get": {
                "tags": [
                    "user"
                ],
                "deprecated": true,
                "responses": {}
            }
        },
        "/v1/user/signup": {
            "post": {
                "tags": [
                    "user"
                ],
                "deprecated": true,
                "responses": {}
            }
        },
        "/v1/user/stat": {
            "get": {
                "description": "show user stats",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "User stat",
                "operationId": "user-stat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.Stat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/delete": {
            "delete": {
                "description": "deletes user info from swarm",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user for ENS based authentication",
                "operationId": "user-delete-v2",
                "parameters": [
                    {
                        "description": "user delete request",
                        "name": "UserDeleteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserDeleteRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/login": {
            "post": {
                "description": "login user with the new ENS based authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login User",
                "operationId": "user-login-v2",
                "parameters": [
                    {
                        "description": "username",
                        "name": "user_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserLoginResponse"
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "fairos-dfs session"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/present": {
            "get": {
                "description": "checks if the new user is present in the new ENS based authentication",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Check if user is present",
                "operationId": "user-present-v2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "userName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PresentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/signup": {
            "post": {
                "description": "registers new user with the new ENS based authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register New User",
                "operationId": "user-signup-v2",
                "parameters": [
                    {
                        "description": "username",
                        "name": "user_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UserSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserSignupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "$ref": "#/definitions/api.UserSignupResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Collection": {
            "type": "object",
            "properties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tableName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.Collections": {
            "type": "object",
            "properties": {
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Collection"
                    }
                }
            }
        },
        "api.DirModeRequest": {
            "type": "object",
            "properties": {
                "dirPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                }
            }
        },
        "api.DirPresentResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "present": {
                    "type": "boolean"
                }
            }
        },
        "api.DirRequest": {
            "type": "object",
            "properties": {
                "dirPath": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                }
            }
        },
        "api.DocCountRequest": {
            "type": "object",
            "properties": {
                "expr": {
                    "type": "string"
                },
                "mutable": {
                    "type": "boolean"
                },
                "podName": {
                    "type": "string"
                },
                "si": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "api.DocFind": {
            "type": "object",
            "properties": {
                "docs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.DocGet": {
            "type": "object",
            "properties": {
                "doc": {
                    "type": "string"
                }
            }
        },
        "api.DocIndexRequest": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "api.DocRequest": {
            "type": "object",
            "properties": {
                "mutable": {
                    "type": "boolean"
                },
                "podName": {
                    "type": "string"
                },
                "si": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "api.DocumentDBs": {
            "type": "object",
            "properties": {
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.documentDB"
                    }
                }
            }
        },
        "api.FileDeleteRequest": {
            "type": "object",
            "properties": {
                "filePath": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                }
            }
        },
        "api.FileModeRequest": {
            "type": "object",
            "properties": {
                "filePath": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                }
            }
        },
        "api.FileShareRequest": {
            "type": "object",
            "properties": {
                "destUser": {
                    "type": "string"
                },
                "filePath": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                }
            }
        },
        "api.FileSharingReference": {
            "type": "object",
            "properties": {
                "fileSharingReference": {
                    "type": "string"
                }
            }
        },
        "api.KVEntryDeleteRequest": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "api.KVEntryRequest": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "api.KVExportRequest": {
            "type": "object",
            "properties": {
                "endPrefix": {
                    "type": "string"
                },
                "limit": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                },
                "startPrefix": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "api.KVResponse": {
            "type": "object",
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.KVResponseRaw": {
            "type": "object",
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "values": {
                    "type": "string"
                }
            }
        },
        "api.KVTableRequest": {
            "type": "object",
            "properties": {
                "indexType": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "api.ListFileResponse": {
            "type": "object",
            "properties": {
                "dirs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dir.Entry"
                    }
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/file.Entry"
                    }
                }
            }
        },
        "api.LoginStatus": {
            "type": "object",
            "properties": {
                "loggedin": {
                    "type": "boolean"
                }
            }
        },
        "api.PodForkFromReferenceRequest": {
            "type": "object",
            "properties": {
                "forkName": {
                    "type": "string"
                },
                "podSharingReference": {
                    "type": "string"
                }
            }
        },
        "api.PodForkRequest": {
            "type": "object",
            "properties": {
                "forkName": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                }
            }
        },
        "api.PodListResponse": {
            "type": "object",
            "properties": {
                "pods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sharedPods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.PodNameRequest": {
            "type": "object",
            "properties": {
                "podName": {
                    "type": "string"
                }
            }
        },
        "api.PodSharingReference": {
            "type": "object",
            "properties": {
                "podSharingReference": {
                    "type": "string"
                }
            }
        },
        "api.PodStatResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                }
            }
        },
        "api.PresentResponse": {
            "type": "object",
            "properties": {
                "present": {
                    "type": "boolean"
                }
            }
        },
        "api.SimpleDocRequest": {
            "type": "object",
            "properties": {
                "podName": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "api.StatusResponse": {
            "type": "object",
            "properties": {
                "processed": {
                    "type": "integer"
                },
                "synced": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.UserDeleteRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "api.UserLoginResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "nameHash": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                }
            }
        },
        "api.UserSignupResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "mnemonic": {
                    "type": "string"
                },
                "nameHash": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                }
            }
        },
        "api.documentDB": {
            "type": "object",
            "properties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/collection.SIndex"
                    }
                },
                "tableName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "collection.SIndex": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "collection.TableKeyCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "common.PodShareRequest": {
            "type": "object",
            "properties": {
                "podName": {
                    "type": "string"
                },
                "sharedPodName": {
                    "type": "string"
                }
            }
        },
        "common.RenameRequest": {
            "type": "object",
            "properties": {
                "newPath": {
                    "type": "string"
                },
                "oldPath": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                }
            }
        },
        "common.UserLoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "common.UserSignupRequest": {
            "type": "object",
            "properties": {
                "mnemonic": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "dir.Entry": {
            "type": "object",
            "properties": {
                "accessTime": {
                    "type": "string"
                },
                "blockSize": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "creationTime": {
                    "type": "string"
                },
                "mode": {
                    "type": "integer"
                },
                "modificationTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "dir.Stats": {
            "type": "object",
            "properties": {
                "accessTime": {
                    "type": "string"
                },
                "creationTime": {
                    "type": "string"
                },
                "dirName": {
                    "type": "string"
                },
                "dirPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "integer"
                },
                "modificationTime": {
                    "type": "string"
                },
                "noOfDirectories": {
                    "type": "string"
                },
                "noOfFiles": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                }
            }
        },
        "file.Entry": {
            "type": "object",
            "properties": {
                "accessTime": {
                    "type": "string"
                },
                "blockSize": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "creationTime": {
                    "type": "string"
                },
                "mode": {
                    "type": "integer"
                },
                "modificationTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "file.Stats": {
            "type": "object",
            "properties": {
                "accessTime": {
                    "type": "string"
                },
                "blockSize": {
                    "type": "string"
                },
                "compression": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "creationTime": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "filePath": {
                    "type": "string"
                },
                "fileSize": {
                    "type": "string"
                },
                "mode": {
                    "type": "integer"
                },
                "modificationTime": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                }
            }
        },
        "pod.ShareInfo": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "podAddress": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                },
                "userAddress": {
                    "type": "string"
                }
            }
        },
        "user.ReceiveFileInfo": {
            "type": "object",
            "properties": {
                "blockSize": {
                    "type": "string"
                },
                "compression": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "destAddress": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numberOfBlocks": {
                    "type": "string"
                },
                "sharedTime": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "sourceAddress": {
                    "type": "string"
                }
            }
        },
        "user.Stat": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        }
    }
}