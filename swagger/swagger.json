{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "host": "localhost:9090",
    "paths": {
        "/v1/dir/ls": {
            "get": {
                "description": "DirectoryLsHandler is the api handler for listing the contents of a directory.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "List directory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dir path",
                        "name": "dir_path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/mkdir": {
            "post": {
                "description": "DirectoryMkdirHandler is the api handler to create a new directory.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "Create directory",
                "parameters": [
                    {
                        "description": "pod name and dir path",
                        "name": "dir_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DirRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/present": {
            "get": {
                "description": "DirectoryPresentHandler is the api handler which says if a directory is present or not",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "Is directory present",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dir path",
                        "name": "dir_path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DirPresentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/rename": {
            "post": {
                "description": "DirectoryRenameHandler is the api handler to rename a directory.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "Rename directory",
                "parameters": [
                    {
                        "description": "old name and new path",
                        "name": "dir_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.RenameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/rmdir": {
            "delete": {
                "description": "DirectoryRmdirHandler is the api handler to remove a directory.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "Remove directory",
                "parameters": [
                    {
                        "description": "pod name and dir path",
                        "name": "dir_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DirRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/dir/stat": {
            "get": {
                "description": "DirectoryStatHandler is the api handler which gives the information about a directory",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dir"
                ],
                "summary": "Directory stat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dir path",
                        "name": "dir_path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dir.Stats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/delete": {
            "delete": {
                "description": "FileReceiveHandler is the api handler to delete a file from a given pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Delete a file",
                "parameters": [
                    {
                        "description": "pod name and file path",
                        "name": "file_delete_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FileDeleteRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/download": {
            "get": {
                "description": "FileDownloadHandlerGet is the api handler to download a file from a given pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Download a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file path",
                        "name": "file_path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            },
            "post": {
                "description": "FileDownloadHandlerPost is the api handler to download a file from a given pod",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "*/*"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Download a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file path",
                        "name": "file_path",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/receive": {
            "get": {
                "description": "FileReceiveHandler is the api handler to receive a file in a given pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Receive a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sharing reference",
                        "name": "sharing_ref",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file location",
                        "name": "dir_path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.FileSharingReference"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/receiveinfo": {
            "get": {
                "description": "FileReceiveInfoHandler is the api handler to receive a file info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Receive a file info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sharing reference",
                        "name": "sharing_ref",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ReceiveFileInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/rename": {
            "post": {
                "description": "FileRenameHandler is the api handler to get the information of a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Info of a file",
                "parameters": [
                    {
                        "description": "old name \u0026 new name",
                        "name": "rename_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.RenameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/share": {
            "post": {
                "description": "FileShareHandler is the api handler to share a file from a given pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Share a file",
                "parameters": [
                    {
                        "description": "file share request params",
                        "name": "file_share_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FileShareRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.FileSharingReference"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/stat": {
            "get": {
                "description": "FileStatHandler is the api handler to get the information of a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Info of a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file path",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/file.Stats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/file/upload": {
            "post": {
                "description": "FileUploadHandler is the api handler to upload a file from a local file system to the dfs",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location",
                        "name": "dir_path",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "4Kb, 1Mb",
                        "description": "block size to break the file",
                        "name": "block_size",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "snappy, gzip",
                        "description": "cookie parameter",
                        "name": "fairOS-dfs-Compression",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/close": {
            "post": {
                "description": "PodCloseHandler is the api handler to close an open pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Close pod",
                "parameters": [
                    {
                        "description": "pod name",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodNameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/delete": {
            "delete": {
                "description": "PodDeleteHandler is the api handler to delete a pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Delete pod",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/ls": {
            "get": {
                "description": "PodListHandler is the api handler to list all pods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "List pods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PodListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/new": {
            "post": {
                "description": "PodCreateHandler is the api handler to create a new pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Create pod",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/open": {
            "post": {
                "description": "PodOpenHandler is the api handler to open pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Open pod",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/open-async": {
            "post": {
                "description": "PodOpenAsyncHandler is the api handler to open pod asynchronously",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Open pod",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/present": {
            "get": {
                "description": "PodPresentHandler is the api handler to check if a pod is present",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Is pod present",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/receive": {
            "get": {
                "description": "PodReceiveHandler is the api handler to receive shared pod from shared reference",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Receive shared pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod sharing reference",
                        "name": "sharing_ref",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pod name to be saved as",
                        "name": "shared_pod_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/receiveinfo": {
            "get": {
                "description": "PodReceiveInfoHandler is the api handler to receive shared pod info from shared reference",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Receive shared pod info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod sharing reference",
                        "name": "sharing_ref",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pod.ShareInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/share": {
            "post": {
                "description": "PodShareHandler is the api handler to share a pod to the public",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Share pod",
                "parameters": [
                    {
                        "description": "pod name and user password",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.PodShareRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PodSharingReference"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/stat": {
            "get": {
                "description": "PodStatHandler is the api handler get information about a pod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Stats for pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PodStatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/pod/sync": {
            "post": {
                "description": "PodSyncHandler is the api handler to sync a pod's content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pod"
                ],
                "summary": "Sync pod",
                "parameters": [
                    {
                        "description": "pod name",
                        "name": "pod_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PodNameRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/user/delete": {
            "post": {
                "deprecated": true,
                "responses": {}
            }
        },
        "/v1/user/export": {
            "post": {
                "deprecated": true,
                "responses": {}
            }
        },
        "/v1/user/isloggedin": {
            "get": {
                "description": "Check if the given user is logged-in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Is user logged-in",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "user_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.LoginStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/user/login": {
            "post": {
                "deprecated": true,
                "responses": {}
            }
        },
        "/v1/user/logout": {
            "post": {
                "description": "logs-out user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v1/user/present": {
            "get": {
                "deprecated": true,
                "responses": {}
            }
        },
        "/v1/user/signup": {
            "post": {
                "deprecated": true,
                "responses": {}
            }
        },
        "/v1/user/stat": {
            "get": {
                "description": "show user stats",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "User stat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.Stat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/delete": {
            "delete": {
                "description": "deletes user info from swarm",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user for ENS based authentication",
                "parameters": [
                    {
                        "description": "user delete request",
                        "name": "UserDeleteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserDeleteRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/login": {
            "post": {
                "description": "login user with the new ENS based authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "user name",
                        "name": "user_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserLoginResponse"
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "fairos-dfs session"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/present": {
            "get": {
                "description": "checks if the new user is present in the new ENS based authentication",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Check if user is present",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "user_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PresentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/signup": {
            "post": {
                "description": "registers new user with the new ENS based authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register New User",
                "parameters": [
                    {
                        "description": "user name",
                        "name": "user_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UserSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserSignupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "$ref": "#/definitions/api.UserSignupResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.DirPresentResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "present": {
                    "type": "boolean"
                }
            }
        },
        "api.DirRequest": {
            "type": "object",
            "properties": {
                "dir_path": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                }
            }
        },
        "api.FileDeleteRequest": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                }
            }
        },
        "api.FileShareRequest": {
            "type": "object",
            "properties": {
                "dest_user": {
                    "type": "string"
                },
                "file_path": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                }
            }
        },
        "api.FileSharingReference": {
            "type": "object",
            "properties": {
                "file_sharing_reference": {
                    "type": "string"
                }
            }
        },
        "api.ListFileResponse": {
            "type": "object",
            "properties": {
                "dirs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dir.Entry"
                    }
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/file.Entry"
                    }
                }
            }
        },
        "api.LoginStatus": {
            "type": "object",
            "properties": {
                "loggedin": {
                    "type": "boolean"
                }
            }
        },
        "api.PodListResponse": {
            "type": "object",
            "properties": {
                "pod_name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shared_pod_name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.PodNameRequest": {
            "type": "object",
            "properties": {
                "pod_name": {
                    "type": "string"
                }
            }
        },
        "api.PodRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                }
            }
        },
        "api.PodSharingReference": {
            "type": "object",
            "properties": {
                "pod_sharing_reference": {
                    "type": "string"
                }
            }
        },
        "api.PodStatResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                }
            }
        },
        "api.PresentResponse": {
            "type": "object",
            "properties": {
                "present": {
                    "type": "boolean"
                }
            }
        },
        "api.UserDeleteRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "api.UserLoginResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name_hash": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                }
            }
        },
        "api.UserSignupResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "mnemonic": {
                    "type": "string"
                },
                "name_hash": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                }
            }
        },
        "api.response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "common.PodShareRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                },
                "shared_pod_name": {
                    "type": "string"
                }
            }
        },
        "common.RenameRequest": {
            "type": "object",
            "properties": {
                "new_path": {
                    "type": "string"
                },
                "old_path": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                }
            }
        },
        "common.UserLoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "common.UserSignupRequest": {
            "type": "object",
            "properties": {
                "mnemonic": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "dir.Entry": {
            "type": "object",
            "properties": {
                "access_time": {
                    "type": "string"
                },
                "block_size": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "creation_time": {
                    "type": "string"
                },
                "modification_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "dir.Stats": {
            "type": "object",
            "properties": {
                "access_time": {
                    "type": "string"
                },
                "creation_time": {
                    "type": "string"
                },
                "dir_name": {
                    "type": "string"
                },
                "dir_path": {
                    "type": "string"
                },
                "modification_time": {
                    "type": "string"
                },
                "no_of_directories": {
                    "type": "string"
                },
                "no_of_files": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                }
            }
        },
        "file.Blocks": {
            "type": "object",
            "properties": {
                "compressed_size": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "file.Entry": {
            "type": "object",
            "properties": {
                "access_time": {
                    "type": "string"
                },
                "block_size": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "creation_time": {
                    "type": "string"
                },
                "modification_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "file.Stats": {
            "type": "object",
            "properties": {
                "access_time": {
                    "type": "string"
                },
                "block_size": {
                    "type": "string"
                },
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/file.Blocks"
                    }
                },
                "compression": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "creation_time": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_path": {
                    "type": "string"
                },
                "file_size": {
                    "type": "string"
                },
                "modification_time": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                }
            }
        },
        "pod.ShareInfo": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "pod_address": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                },
                "user_address": {
                    "type": "string"
                }
            }
        },
        "user.ReceiveFileInfo": {
            "type": "object",
            "properties": {
                "block_size": {
                    "type": "string"
                },
                "compression": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "dest_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number_of_blocks": {
                    "type": "string"
                },
                "pod_name": {
                    "type": "string"
                },
                "shared_time": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "source_address": {
                    "type": "string"
                }
            }
        },
        "user.Stat": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        }
    }
}