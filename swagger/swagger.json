{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "host": "localhost:9090",
    "paths": {
        "/v1/user/isloggedin": {
            "get": {
                "description": "Check if the given user is logged-in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Is user logged-in",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "user_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.LoginStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/delete": {
            "delete": {
                "description": "deletes user info from swarm",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v2"
                ],
                "summary": "Delete user for ENS based authentication",
                "parameters": [
                    {
                        "description": "user delete request",
                        "name": "UserDeleteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserDeleteRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "cookie parameter",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/login": {
            "post": {
                "description": "login user with the new ENS based authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v2"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "user name",
                        "name": "user_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserLoginResponse"
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "fairos-dfs session"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/present": {
            "get": {
                "description": "checks if the new user is present in the new ENS based authentication",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v2"
                ],
                "summary": "Check if user is present",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "user_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PresentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        },
        "/v2/user/signup": {
            "post": {
                "description": "registers new user with the new ENS based authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v2"
                ],
                "summary": "Register New User",
                "parameters": [
                    {
                        "description": "user name",
                        "name": "user_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UserSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserSignupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "$ref": "#/definitions/api.UserSignupResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.LoginStatus": {
            "type": "object",
            "properties": {
                "loggedin": {
                    "type": "boolean"
                }
            }
        },
        "api.PresentResponse": {
            "type": "object",
            "properties": {
                "present": {
                    "type": "boolean"
                }
            }
        },
        "api.UserDeleteRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "api.UserLoginResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name_hash": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                }
            }
        },
        "api.UserSignupResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "mnemonic": {
                    "type": "string"
                },
                "name_hash": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                }
            }
        },
        "api.response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "common.UserLoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "common.UserSignupRequest": {
            "type": "object",
            "properties": {
                "mnemonic": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        }
    }
}